{"version":3,"file":"static/js/934.f1cebaf2.chunk.js","mappings":"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","sources":["webpack://project-social/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://project-social/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://project-social/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__ECzqg\",\"posts\":\"MyPosts_posts__7DoL-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__fISPl\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://pristor.ru/wp-content/uploads/2019/11/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B8-%D0%B4%D0%BB%D1%8F-%D0%B4%D0%B5%D0%B2%D1%83%D1%88%D0%B5%D0%BA001.jpg\" alt=\"\" />\r\n      { props.massege }\r\n      <div>\r\n        <span>Likes: { props.likeCount }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.State;\r\n  // }\r\n\r\n  let postsElements = props.posts.map(p => <Post key={p.id} massege={p.message} likeCount={p.likeCount} />)\r\n\r\n  // let newPostElement = React.createRef();\r\n\r\n  // let onAddPost = () => {\r\n  //   props.addPost();\r\n  // };\r\n\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value;\r\n  //   props.updateNewPostText(text);\r\n  // }\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message\"\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profileAddPostForm\" })(AddPostForm);\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   let action = updateNewPostTextActionCreator(text);\r\n    //   dispatch(action);\r\n    // },\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"content__img\":\"ProfileInfo_content__img__k8wsU\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__vloas\",\"image\":\"ProfileInfo_image__ELLo-\",\"aboutUser\":\"ProfileInfo_aboutUser__5d-So\",\"findJob\":\"ProfileInfo_findJob__FaaW1\",\"circle\":\"ProfileInfo_circle__e7RhD\",\"circleGreen\":\"ProfileInfo_circleGreen__FE5rp\",\"circleRed\":\"ProfileInfo_circleRed__XXJ8Z\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    });\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('render');\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n          <div>\r\n            <div onDoubleClick={this.activateEditMode}>{this.props.status || '-------'}</div>\r\n          </div>\r\n        }\r\n        {this.state.editMode &&\r\n          <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} type=\"text\" value={this.state.status} />\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <div onDoubleClick={activateEditMode}>{props.status || '-------'}</div>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} type=\"text\" onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../asseds/images/icon-5359553_1280.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className={s.content__img} src=\"https://bipbap.ru/wp-content/uploads/2017/04/0_7c779_5df17311_orig.jpg\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <div className={s.image}>\r\n          <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"\" />\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        <div className={s.aboutUser}><span>Имья: </span>{profile.fullName}</div>\r\n        <div className={s.aboutUser}><span>Про меня: </span> {profile.aboutMe}</div>\r\n        <div className={s.aboutUser + ' ' + s.findJob}>\r\n          <div>Ищу работу:</div>\r\n          <div className={s.circle}>{profile.lookingForAJob == true ? <div className={s.circleGreen}></div> : <div className={s.circleRed}></div>}\r\n          </div>\r\n        </div>\r\n        <div className={s.lookingForAJobDescription}><span>Нужна работа: </span> {profile.lookingForAJobDescription}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { useParams } from 'react-router-dom'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// class ProfileContainer extends React.Component {\r\n\r\n//   componentDidMount() {\r\n\r\n//     axios.get(`https://social-network.samuraijs.com/api/1.0/profile/2`)\r\n//       .then(response => {\r\n//         this.props.setUserProfile(response.data);\r\n//       });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <Profile {...this.props} profile={this.props.profile} />\r\n//     )\r\n//   }\r\n// }\r\n\r\n// let mapStateToProps = (state) => ({\r\n//   profile: state.profilePage.profile\r\n// });\r\n\r\n// export default connect(mapStateToProps, { setUserProfile })(ProfileContainer);\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      params={params}\r\n    />\r\n  );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;  //21962\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} stautus={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);    //  HOC\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);"],"names":["props","className","s","src","alt","massege","likeCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElements","posts","map","p","message","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","React","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","type","onBlur","updateStatus","profile","photos","large","userPhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","ProfileContainer","userId","this","params","authorizedUserId","getUserProfile","getStatus","stautus","compose","auth","isAuth","WrappedComponent","useParams","withAuthRedirect"],"sourceRoot":""}